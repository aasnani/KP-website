require("dotenv").config();const fetch=require("node-fetch"),express=require("express"),nodemailer=require("nodemailer"),path=require("path"),pino=require("pino"),moment=require("moment"),__DIRNAME=path.resolve(),ENV_LEVEL=process.env.NODE_ENV,LOG_LEVEL=process.env.LOG_LEVEL,date_string=moment().format("YYYY-MM-DD HH:mm:ss"),NODEMAILER_EMAIL_SETTINGS={name:process.env.HOST,host:process.env.HOST,port:465,secure:!0,auth:{user:process.env.CONTACT_US_EMAIL,pass:process.env.CONTACT_US_PW}},CC_ADD_CONTACT_ENDPOINT="https://api.cc.email/v3/contacts/sign_up_form",MAIL_LIST_ID=process.env.MAIN_EMAIL_LIST,CC_REFRESH_INFO={url:`https://authz.constantcontact.com/oauth2/default/v1/token?refresh_token=${process.env.REFRESH_TOKEN}&grant_type=refresh_token`,options:{headers:{Authorization:"Basic "+process.env.BASE64_ENCODE,"Content-Type":"application/x-www-form-urlencoded",Accept:"application/json"},method:"POST"}};let CC_DATA_ACCESS_HEADERS={"Content-Type":"application/json"};const create_contact_json_string=email=>{let body={create_source:"Contact",email_address:email,list_memberships:[MAIL_LIST_ID]};return JSON.stringify(body)},create_nodemailer_mail_object=(name,email,phone,message)=>({from:process.env.CONTACT_US_EMAIL,to:process.env.CONTACT_US_DESTINATION,subject:`Contact Us Form: ${name}`,text:`Name: ${name}\nEmail: ${email}\nPhone: ${phone}\nMessage: ${message}`}),refresh_access_token=async()=>{const response=await fetch(CC_REFRESH_INFO.url,CC_REFRESH_INFO.options),response_json=await response.json();CC_DATA_ACCESS_HEADERS.Authorization="Bearer "+response_json.access_token},get_options_object=(method,body)=>{let headers_clone,options={headers:Object.assign({},CC_DATA_ACCESS_HEADERS),method:method};return null!=body&&(options.body=body),options},transport=pino.transport({targets:[{target:"pino/file",options:{destination:`${__DIRNAME}/logs/app-${date_string}.log`},level:LOG_LEVEL},{target:"pino-pretty",level:LOG_LEVEL}]}),logger=pino({level:LOG_LEVEL},transport);logger.info("Logging started!");const transporter=nodemailer.createTransport(NODEMAILER_EMAIL_SETTINGS);transporter.verify((function(error,success){error?logger.error({error:error},"Error with nodemailer transporter"):logger.info("Nodemailer successfully set-up and verified")}));let app=express();app.use(express.json()),app.use(express.static("home.html")),app.use("/css",express.static("css")),app.use("/fonts",express.static("fonts")),app.use("/images",express.static("images")),app.use("/js",express.static("js")),app.get("/",(req,res)=>{res.sendFile(__DIRNAME+"/homepage.html")}),app.get("/new-arrivals",(req,res)=>{res.sendFile(__DIRNAME+"/pages/new-arrivals.html")}),app.get("/gold-jewelry",(req,res)=>{res.sendFile(__DIRNAME+"/pages/gold-jewelry.html")}),app.post("/addToEmailList",(req,res)=>{logger.info("/addToEmailList - Request received");let email=req.query.email_address,add_contact_body=create_contact_json_string(email);logger.debug({add_contact_body:add_contact_body},"/addToEmailList - CC Payload"),fetch(CC_ADD_CONTACT_ENDPOINT,get_options_object("POST",add_contact_body)).then(async api_response=>{if(401==api_response.status){await refresh_access_token();let response=await fetch(CC_ADD_CONTACT_ENDPOINT,get_options_object("POST",add_contact_body));200==response.status|201==response.status?(logger.info(`/addToEmailList - CC Request handled with retry - Status:${response.status}`),logger.debug({response:response},"Response body of successful CC request after retry"),res.status(201).json({status:"success"})):(logger.error(`/addToEmailList - CC Request failed to be handled with retry - Status:${response.status}`),logger.debug({response:response},"Response body of failed CC request after retry"),res.status(500).json({status:"failure"}))}else logger.info(`/addToEmailList - CC Request handled - Status:${api_response.status}`),logger.debug({api_response:api_response},"Response body of successful CC request"),res.status(201).json({status:"success"})}).catch(async error=>{logger.error(`/addToEmailList - CC Request failed to be handled - Status:${error.status}`),logger.debug({error:error},"Response body of failed CC request"),res.status(500).json({status:"failure"})})}),app.post("/sendContactUs",(req,res)=>{logger.info("/sendContactUs - Request received");let name=req.body.name,email=req.body.email,phone=req.body.phone,message=req.body.message;const mail=create_nodemailer_mail_object(name,email,phone,message);logger.debug({mail:mail},"/sendContactUs - Email Payload"),transporter.sendMail(mail,(err,data)=>{err?(logger.error({err:err},"/sendContactUs - Email request failed to be handled"),res.status(500).json({status:"failure"})):(logger.info({data:data},"/sendContactUs - Email request successfully handled"),res.status(200).json({status:"success"}))})}),logger.info("App Starting"),app.listen(process.env.port||8080);